import re

# Function to add labels to SQL statements
def add_labels(content, counter):
    # Create labeled content with the current counter value
    labeled_content = f'.LABEL {counter};\n'
    labeled_content += f'{content.strip()};\n'
    labeled_content += f"SELECT '1' AS cb_delete;\n"  # Add select statement
    return labeled_content, counter + 1

# Path to the script file
script_path = 'C:\\Users\\asus\\OneDrive\\Desktop\\label_creator_test_sql.sql'

# Read the script content from the file
with open(script_path, 'r') as file:
    script_content = file.read()

# Split the script content into individual statements
statements = re.split(r';\s*', script_content)

# Initialize counter
counter = 1

# Add labels to each statement
labeled_statements = []
for statement in statements[:-1]:  # Exclude the last empty statement after the final semicolon
    # Add labels to the statement and update counter
    labeled_statement, counter = add_labels(statement, counter)
    # Append labeled statement to the list
    labeled_statements.append(labeled_statement)
    # Add an empty line after each labeled statement
    labeled_statements.append('\n')

# Join the labeled statements back together
labeled_script = ';\n'.join(labeled_statements)

# Path to save the modified script
output_path = 'C:\\Users\\asus\\OneDrive\\Desktop\\label_creator_test_sql_labeled.sql'

# Write the modified script to a new file
with open(output_path, 'w') as file:
    file.write(labeled_script)
